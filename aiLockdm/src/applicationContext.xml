<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">
           
	<context:annotation-config />
	<context:component-scan base-package="com.hnctdz.aiLockdm.dao,com.hnctdz.aiLockdm.socket" />
	<aop:aspectj-autoproxy/>
	
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
    	<property name="driverClass" value="com.mysql.jdbc.Driver" />
    	<!-- 本地环境 -->
    	<property name="jdbcUrl" value="jdbc:mysql://127.0.0.1:3306/aiLock?useOldAliasMetadataBehavior=true" />
    	<property name="user" value="ailock"></property>
    	<property name="password" value="ailock"></property>
    	<!-- 生产环境
    	<property name="jdbcUrl" value="jdbc:mysql://rdstc9zqgjhzci3cj4r4l.mysql.rds.aliyuncs.com:3306/ailock" />
    	<property name="user" value="ailock"></property>
    	<property name="password" value="ailock"></property> -->
    	
    	<!-- 初始化时创建的连接数，应在minPoolSize与maxPoolSize之间取值 -->
		<property name="initialPoolSize"><value>5</value></property>
    	<!-- 连接池中保留的最小连接数 -->
		<property name="minPoolSize"><value>2</value></property>
		<!-- 连接池中保留的最大连接数 -->
		<property name="maxPoolSize"><value>50</value></property>
		<!-- 最大空闲时间，5秒内未使用则连接被丢弃。若为0则永不丢弃 -->
		<property name="maxIdleTime"><value>5</value></property>
		<!-- 每隔30秒检查连接池里的空闲连接 ，单位是秒 -->
		<property name="idleConnectionTestPeriod"><value>30</value></property>
		<!-- 当连接池里面的连接用完的时候，C3P0一次同时获取的新的连接数 -->
		<property name="acquireIncrement"><value>2</value></property>
		<!--当连接池用完时客户端调用getConnection()后等待获取新连接的时间，超时后将抛出
			SQLException,如设为0则无限期等待。单位毫秒。 -->
		<property name="checkoutTimeout"><value>7000</value></property> 
    </bean>
    
    <bean name="hibernateProperties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="properties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.cache.use_query_cache">false</prop>
				<prop key="hibernate.default_batch_fetch_size">30</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
				<prop key="hibernate.format_sql">false</prop>
			</props>
		</property>
	</bean>
	
	<bean id="annotatedClasses"
		class="org.springframework.beans.factory.config.ListFactoryBean">
		<property name="sourceList">
			<list>
				<!-- 系统管理 
				<value>com.hnctdz.aiLock.domain.system.SysUser</value>-->
			</list>
		</property>
	</bean>			
    
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
    	<property name="dataSource" ref="dataSource"></property>
		<property name="annotatedClasses" ref="annotatedClasses" />
		<property name="hibernateProperties" ref="hibernateProperties" />
    </bean>
    
    <bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate" >
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
    
    <!-- 该 BeanPostProcessor 将自动对标注 @Autowired 的 Bean 进行注入
	<bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>  -->      
	
	<bean class="com.hnctdz.aiLockdm.utils.ApplicationContextUtil"></bean>
	
	<bean id="lockRecordDao" class="com.hnctdz.aiLockdm.dao.impl.LockRecordDaoImpl" parent="hibernateTemplate" ></bean>
	<bean id="devLockInfoDao" class="com.hnctdz.aiLockdm.dao.impl.DevLockInfoDaoImpl" parent="hibernateTemplate" ></bean>
	
	<bean id="initBean" class="com.hnctdz.aiLockdm.socket.SpringIntegrationBean"></bean>
	<!-- 导入业务bean
	<import resource="classpath:springconfig/**/*.xml" /> -->

</beans>

